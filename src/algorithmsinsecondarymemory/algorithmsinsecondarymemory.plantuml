@startuml

title __ALGORITHMSINSECONDARYMEMORY's Class Diagram__\n

  namespace algorithmsinsecondarymemory {
    class algorithmsinsecondarymemory.AlgorithmsInSecondaryMemory {
        {static} + main()
    }
  }
  

  namespace algorithmsinsecondarymemory {
    class algorithmsinsecondarymemory.ExperimentsSet {
        {static} ~ FolderPath : String
        {static} ~ listOfFiles : String[]
        {static} + compined_reading_writing()
        {static} + init()
        {static} + multi_way_merge_sort()
        {static} + random_reading()
        {static} + sequential_reading()
    }
  }
  

  namespace algorithmsinsecondarymemory {
    class algorithmsinsecondarymemory.IOFactory {
        - B : int
        - method : String
        - outFileSize : long
        + IOFactory()
        + IOFactory()
        + IOFactory()
        + makeReader()
        + makeWriter()
    }
  }
  

  namespace algorithmsinsecondarymemory {
    class algorithmsinsecondarymemory.LineOfStream {
        ~ streamIndex : int
        ~ text : String
        + LineOfStream()
    }
  }
  

  namespace algorithmsinsecondarymemory {
    class algorithmsinsecondarymemory.MethodContainer {
        {static} + B1 : int
        {static} + B2 : int
        {static} + INPUT_FILE_NAME : String
        {static} + INPUT_FOLDER_PATH : String
        {static} + OUTPUT_FILE_NAME_PREFIX : String
        {static} + OUTPUT_FOLDER_PATH : String
        {static} + j : int
        {static} + bufferRandomRead()
        {static} + bufferRead()
        {static} + charRandomRead()
        {static} + charRead()
        {static} + clearOutputFolder()
        {static} + extsort()
        {static} + getFileSize()
        {static} + length()
        {static} + lineRandomRead()
        {static} + lineRead()
        {static} + lineReaderBufferedWriter()
        {static} + lineReaderCharWriter()
        {static} + lineReaderLineWriter()
        {static} + lineReaderMappedWriter()
        {static} + mappedReaderBufferedWriter()
        {static} + mappedReaderCharWriter()
        {static} + mappedReaderLineWriter()
        {static} + mappedReaderMappedWriter()
        {static} + mappingRandomRead()
        {static} + mappingRead()
        {static} + randjump()
        {static} + rrmerge()
        {static} + setB1()
        {static} + setB2()
        {static} + setInputFileName()
        {static} + setInputFolderPath()
        {static} + setJ()
        {static} + setOutputFileNamePrefix()
        {static} + setOutputFolderPath()
    }
  }
  

  namespace algorithmsinsecondarymemory {
    class algorithmsinsecondarymemory.MultiWayMergeSort {
        {static} - INPUT_FOLDER_PATH : String
        {static} - OUTPUT_FOLDER_PATH : String
        + MultiWayMergeSort()
        + MultiWayMergeSort()
        + exsort()
        {static} - cmp()
        {static} - isNumeric()
        - merge()
    }
  }
  

  namespace algorithmsinsecondarymemory {
    class algorithmsinsecondarymemory.Testing {
        {static} - B1 : int
        {static} - B2 : int
        {static} - INPUT_FILE_NAME : String
        {static} - INPUT_FOLDER_PATH : String
        {static} - OUTPUT_FILE_NAME_PREFIX : String
        {static} - OUTPUT_FOLDER_PATH : String
        {static} + clearOutputFolder()
        {static} + compareTwoFiles()
        {static} + testMethod()
    }
  }
  

  algorithmsinsecondarymemory.MultiWayMergeSort o-- algorithmsinsecondarymemory.IOFactory : factory
  algorithmsinsecondarymemory.MultiWayMergeSort o-- io.InputStream : r
  algorithmsinsecondarymemory.MultiWayMergeSort o-- io.OutputStream : w


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
